export const projects: Project[] = [
  {
    id: "blockchain-iot-framework",
    title: "Blockchain Framework for IoT Networks",
    category: "blockchain",
    description:
      "Energy-efficient blockchain architecture for secure IoT communication with ZK-Rollups and edge computing.",
    longDescription:
      "A revolutionary blockchain-based framework that addresses the critical challenges of energy efficiency and scalability in IoT networks. This project combines cutting-edge technologies including ZK-Rollups, Verkle Trees, and edge computing to create a robust, scalable solution for secure IoT communication.",
    technologies: [
      "Blockchain",
      "Solidity",
      "ZK-Rollups",
      "Verkle Trees",
      "Edge Computing",
      "IoT Protocols",
      "MQTT",
      "CoAP",
      "ECC Authentication",
      "Smart Contracts",
      "Node.js",
      "Python",
    ],
    features: [
      "Layered blockchain architecture with ZK-Rollups for Layer 2 scaling",
      "Verkle Trees implementation for enhanced privacy",
      "Edge computing integration for ZKP computation offloading",
      "Multi-protocol compatibility (MQTT, CoAP, HTTP)",
      "Smart contract-based authentication and authorization",
      "Real-time DDoS attack mitigation",
      "Energy-efficient consensus mechanism",
    ],
    challenges: [
      "Achieving high throughput while maintaining security",
      "Reducing energy consumption compared to traditional blockchain",
      "Ensuring privacy in IoT data transmission",
      "Creating interoperability across different IoT protocols",
      "Optimizing performance for resource-constrained devices",
    ],
    solutions: [
      "Implemented ZK-Rollups to achieve ~2,500 TPS with 850ms median latency",
      "Developed custom consensus algorithm reducing energy by 95% vs Ethereum PoW",
      "Used Verkle Trees to keep 99.8% of data off-chain",
      "Created middleware layer for seamless protocol integration",
      "Edge computing architecture to handle complex computations",
    ],
    images: [
      "/images/projects/blockchain-iot/architecture.png",
      "/images/projects/blockchain-iot/performance.png",
      "/images/projects/blockchain-iot/security.png",
    ],
    githubUrl: "https://github.com/samuel/blockchain-iot-framework",
    demoVideo: "/videos/blockchain-iot-demo.mp4",
    metrics: {
      performance: "2,500 TPS",
      efficiency: "95% energy reduction",
      accuracy: "99.7% uptime during attacks",
      scalability: "99.8% off-chain data",
    },
    timeline: "8 months",
    teamSize: 4,
    myRole: "Lead Developer & Blockchain Architect",
    featured: true,
    status: "completed",
  },
  {
    id: "warehouse-management-gnn",
    title: "AI-Powered Warehouse Management System",
    category: "ml",
    description:
      "Hardware-software integrated warehouse system using Graph Neural Networks and Dijkstra's algorithm for optimal navigation.",
    longDescription:
      "An innovative warehouse inventory management system that combines traditional pathfinding algorithms with modern machine learning. The system uses Graph Neural Networks to learn and adapt navigation patterns based on item characteristics, significantly improving warehouse efficiency.",
    technologies: [
      "Arduino",
      "C++",
      "Python",
      "TensorFlow",
      "Graph Neural Networks",
      "Dijkstra Algorithm",
      "IR Sensors",
      "LED Arrays",
      "Shift Registers",
      "Remote Control Systems",
      "Real-time Processing",
    ],
    features: [
      "Real-time shelf occupancy tracking using IR sensors",
      "Dynamic LED path indication system",
      "GNN-based adaptive navigation learning",
      "Remote shelf status control and monitoring",
      "Cost and fragility-aware pathfinding",
      "Hardware-software integration with Arduino",
      "Adjacency matrix-based warehouse mapping",
    ],
    challenges: [
      "Implementing ML algorithms on resource-constrained hardware",
      "Real-time sensor data processing and response",
      "Optimizing paths for multiple constraints (cost, fragility, distance)",
      "Creating scalable hardware architecture",
      "Ensuring reliable sensor communication",
    ],
    solutions: [
      "Developed lightweight GNN model optimized for Arduino processing",
      "Implemented efficient adjacency matrix algorithms",
      "Created multi-objective optimization using weighted graphs",
      "Designed modular hardware architecture with shift registers",
      "Built robust sensor network with error handling",
    ],
    images: [
      "/images/projects/warehouse/system-overview.png",
      "/images/projects/warehouse/hardware-setup.png",
      "/images/projects/warehouse/gnn-visualization.png",
    ],
    githubUrl: "https://github.com/samuel/warehouse-gnn-system",
    metrics: {
      efficiency: "40% reduction in travel time",
      accuracy: "98% path optimization",
      scalability: "Supports 100+ shelf locations",
    },
    timeline: "6 months",
    teamSize: 3,
    myRole: "Systems Architect & ML Engineer",
    featured: true,
    status: "completed",
  },
  {
    id: "coffee-delivery-robot",
    title: "Autonomous Coffee Delivery Robot",
    category: "robotics",
    description:
      "Multi-mode autonomous robot with human following, obstacle avoidance, line tracking, and remote control capabilities.",
    longDescription:
      "A sophisticated autonomous robot designed for coffee delivery with multiple operation modes. Features advanced navigation algorithms, sensor fusion, and mobile app integration for versatile autonomous and manual operation.",
    technologies: [
      "Arduino",
      "Raspberry Pi",
      "Computer Vision",
      "OpenCV",
      "Ultrasonic Sensors",
      "Camera Module",
      "Motor Controllers",
      "Bluetooth",
      "Mobile App Development",
      "Python",
      "C++",
      "PID Control",
      "Sensor Fusion",
    ],
    features: [
      "Human following using computer vision",
      "Obstacle detection and avoidance",
      "Line tracking for predefined paths",
      "Autopilot mode with GPS integration",
      "Remote control via mobile application",
      "Load balancing for stable cargo transport",
      "Emergency stop and safety protocols",
    ],
    challenges: [
      "Implementing reliable human detection and tracking",
      "Real-time obstacle avoidance in dynamic environments",
      "Balancing autonomous and manual control modes",
      "Ensuring stable transport of liquids",
      "Optimizing battery life for extended operation",
    ],
    solutions: [
      "Developed computer vision algorithms for robust human tracking",
      "Implemented sensor fusion for comprehensive environment mapping",
      "Created seamless mode switching with priority-based control",
      "Designed gimbal system for liquid stability",
      "Optimized power management with sleep modes",
    ],
    images: [
      "/images/projects/coffee-robot/robot-overview.png",
      "/images/projects/coffee-robot/navigation.png",
      "/images/projects/coffee-robot/mobile-app.png",
    ],
    githubUrl: "https://github.com/samuel/coffee-delivery-robot",
    demoVideo: "/videos/coffee-robot-demo.mp4",
    metrics: {
      accuracy: "95% human tracking accuracy",
      efficiency: "2 hours continuous operation",
      performance: "0.5m/s optimal speed",
    },
    timeline: "4 months",
    myRole: "Robotics Engineer & Software Developer",
    featured: true,
    status: "completed",
  },
  {
    id: "smart-home-security",
    title: "Smart Home Security System",
    category: "embedded",
    description:
      "IoT-based home security with motion detection, automatic door control, and real-time monitoring.",
    longDescription:
      "A comprehensive smart home security solution featuring motion detection, automated access control, and remote monitoring capabilities. Integrates multiple sensors and actuators for a complete security ecosystem.",
    technologies: [
      "Arduino",
      "ESP32",
      "PIR Sensors",
      "IR Sensors",
      "Servo Motors",
      "IoT Protocols",
      "WiFi Module",
      "Mobile App",
      "Cloud Integration",
      "MQTT",
    ],
    features: [
      "Motion detection with PIR sensors",
      "Automatic door opening system",
      "Real-time security monitoring",
      "Mobile notifications and alerts",
      "Remote system control",
      "Activity logging and history",
      "Integration with smart home ecosystem",
    ],
    challenges: [
      "Ensuring reliable motion detection",
      "Managing power consumption",
      "Implementing secure remote access",
      "Handling network connectivity issues",
      "Integrating multiple sensor types",
    ],
    solutions: [
      "Implemented multi-sensor fusion for reliable detection",
      "Optimized power management with sleep modes",
      "Added end-to-end encryption for remote access",
      "Created robust error handling for network issues",
      "Developed unified sensor interface",
    ],
    images: [
      "/images/projects/smart-security/system-diagram.png",
      "/images/projects/smart-security/mobile-interface.png",
    ],
    githubUrl: "https://github.com/samuel/smart-home-security",
    timeline: "3 months",
    myRole: "Embedded Systems Developer",
    featured: false,
    status: "completed",
  },
];

export const getProjectsByCategory = (category: Project["category"]) =>
  projects.filter((project) => project.category === category);

export const getFeaturedProjects = () =>
  projects.filter((project) => project.featured);

export const getProjectById = (id: string) =>
  projects.find((project) => project.id === id);
